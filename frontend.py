import gradio as gr
import requests

def analyze_code(code, language):
    url = "http://localhost:8000/analyze"
    payload = {"code": code, "language": language}
    try:
        response = requests.post(url, json=payload)
        response.raise_for_status()
        return response.json()["analysis"]
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

demo = gr.Interface(
    fn=analyze_code,
    inputs=[
        gr.Code(language="python", label="–í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –∫–æ–¥"),
        gr.Dropdown(["python", "javascript", "java", "go"], label="–Ø–∑—ã–∫ –∫–æ–¥–∞")
    ],
    outputs=gr.Markdown(label="–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞"),
    title="üîí SafeCode AI ‚Äî –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∫–æ–¥–∞",
    description="""
    –í—Å—Ç–∞–≤—å—Ç–µ –∫–æ–¥ ‚Äî –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ª–µ–≥–∫–æ–≤–µ—Å–Ω—É—é –º–æ–¥–µ–ª—å Phi-3 + –±–∞–∑—É OWASP/CWE –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞.
    """,
    
)

if __name__ == "__main__":
    demo.launch(server_name="0.0.0.0", server_port=7860)